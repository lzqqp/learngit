# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import disengage_pb2 as disengage__pb2
import map_pb2 as map__pb2
import service_nodejs_to_cpp_pb2 as service__nodejs__to__cpp__pb2
import simulation_grading_result_pb2 as simulation__grading__result__pb2
import simulation_local_player_pb2 as simulation__local__player__pb2


class NodejsToCppStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.LoadGradingResultFile = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LoadGradingResultFile',
        request_serializer=service__nodejs__to__cpp__pb2.LoadRequest.SerializeToString,
        response_deserializer=simulation__grading__result__pb2.GradingResult.FromString,
        )
    self.GradeLog = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/GradeLog',
        request_serializer=service__nodejs__to__cpp__pb2.LoadRequest.SerializeToString,
        response_deserializer=simulation__grading__result__pb2.GradingResult.FromString,
        )
    self.LogDisengage = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LogDisengage',
        request_serializer=disengage__pb2.Disengage.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.LogComment = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LogComment',
        request_serializer=disengage__pb2.Disengage.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.LogCritical = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LogCritical',
        request_serializer=disengage__pb2.Disengage.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.GetMapElementById = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/GetMapElementById',
        request_serializer=service__nodejs__to__cpp__pb2.MapMeta.SerializeToString,
        response_deserializer=map__pb2.Map.FromString,
        )
    self.GetMapDiff = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/GetMapDiff',
        request_serializer=service__nodejs__to__cpp__pb2.MapMeta.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.MapMeta.FromString,
        )
    self.GetMapName = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/GetMapName',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.GetMapInfo = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/GetMapInfo',
        request_serializer=service__nodejs__to__cpp__pb2.MapInfoRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.MapInfo.FromString,
        )
    self.StartRouting = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/StartRouting',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.PubRouting = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/PubRouting',
        request_serializer=service__nodejs__to__cpp__pb2.PubRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.InitStartPoint = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/InitStartPoint',
        request_serializer=service__nodejs__to__cpp__pb2.InitRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.LocalPlayer = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LocalPlayer',
        request_serializer=simulation__local__player__pb2.LPControl.SerializeToString,
        response_deserializer=simulation__local__player__pb2.LPStatus.FromString,
        )
    self.StartControl = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/StartControl',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.LogTaskPurpose = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/LogTaskPurpose',
        request_serializer=disengage__pb2.Disengage.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.StartAll = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/StartAll',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.ReCheck = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/ReCheck',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )
    self.ShutDown = channel.unary_unary(
        '/adu.simulation.NodejsToCpp/ShutDown',
        request_serializer=service__nodejs__to__cpp__pb2.StartRequest.SerializeToString,
        response_deserializer=service__nodejs__to__cpp__pb2.StatusResponse.FromString,
        )


class NodejsToCppServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def LoadGradingResultFile(self, request, context):
    """Sends a request for retrieving grading result.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GradeLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogDisengage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogComment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogCritical(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMapElementById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMapDiff(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMapName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMapInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRouting(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PubRouting(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitStartPoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LocalPlayer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartControl(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogTaskPurpose(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShutDown(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NodejsToCppServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'LoadGradingResultFile': grpc.unary_unary_rpc_method_handler(
          servicer.LoadGradingResultFile,
          request_deserializer=service__nodejs__to__cpp__pb2.LoadRequest.FromString,
          response_serializer=simulation__grading__result__pb2.GradingResult.SerializeToString,
      ),
      'GradeLog': grpc.unary_unary_rpc_method_handler(
          servicer.GradeLog,
          request_deserializer=service__nodejs__to__cpp__pb2.LoadRequest.FromString,
          response_serializer=simulation__grading__result__pb2.GradingResult.SerializeToString,
      ),
      'LogDisengage': grpc.unary_unary_rpc_method_handler(
          servicer.LogDisengage,
          request_deserializer=disengage__pb2.Disengage.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'LogComment': grpc.unary_unary_rpc_method_handler(
          servicer.LogComment,
          request_deserializer=disengage__pb2.Disengage.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'LogCritical': grpc.unary_unary_rpc_method_handler(
          servicer.LogCritical,
          request_deserializer=disengage__pb2.Disengage.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'GetMapElementById': grpc.unary_unary_rpc_method_handler(
          servicer.GetMapElementById,
          request_deserializer=service__nodejs__to__cpp__pb2.MapMeta.FromString,
          response_serializer=map__pb2.Map.SerializeToString,
      ),
      'GetMapDiff': grpc.unary_unary_rpc_method_handler(
          servicer.GetMapDiff,
          request_deserializer=service__nodejs__to__cpp__pb2.MapMeta.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.MapMeta.SerializeToString,
      ),
      'GetMapName': grpc.unary_unary_rpc_method_handler(
          servicer.GetMapName,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'GetMapInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetMapInfo,
          request_deserializer=service__nodejs__to__cpp__pb2.MapInfoRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.MapInfo.SerializeToString,
      ),
      'StartRouting': grpc.unary_unary_rpc_method_handler(
          servicer.StartRouting,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'PubRouting': grpc.unary_unary_rpc_method_handler(
          servicer.PubRouting,
          request_deserializer=service__nodejs__to__cpp__pb2.PubRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'InitStartPoint': grpc.unary_unary_rpc_method_handler(
          servicer.InitStartPoint,
          request_deserializer=service__nodejs__to__cpp__pb2.InitRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'LocalPlayer': grpc.unary_unary_rpc_method_handler(
          servicer.LocalPlayer,
          request_deserializer=simulation__local__player__pb2.LPControl.FromString,
          response_serializer=simulation__local__player__pb2.LPStatus.SerializeToString,
      ),
      'StartControl': grpc.unary_unary_rpc_method_handler(
          servicer.StartControl,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'LogTaskPurpose': grpc.unary_unary_rpc_method_handler(
          servicer.LogTaskPurpose,
          request_deserializer=disengage__pb2.Disengage.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'StartAll': grpc.unary_unary_rpc_method_handler(
          servicer.StartAll,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'ReCheck': grpc.unary_unary_rpc_method_handler(
          servicer.ReCheck,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
      'ShutDown': grpc.unary_unary_rpc_method_handler(
          servicer.ShutDown,
          request_deserializer=service__nodejs__to__cpp__pb2.StartRequest.FromString,
          response_serializer=service__nodejs__to__cpp__pb2.StatusResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.simulation.NodejsToCpp', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
