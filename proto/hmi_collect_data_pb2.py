# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hmi_collect_data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import hmi_error_code_pb2 as hmi__error__code__pb2
import hmi_collect_disk_info_pb2 as hmi__collect__disk__info__pb2
import hmi_collect_car_device_pb2 as hmi__collect__car__device__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='hmi_collect_data.proto',
  package='adu.hmi',
  syntax='proto2',
  serialized_pb=_b('\n\x16hmi_collect_data.proto\x12\x07\x61\x64u.hmi\x1a\x14hmi_error_code.proto\x1a\x1bhmi_collect_disk_info.proto\x1a\x1chmi_collect_car_device.proto\"A\n\x12WorkStationRequest\x12+\n\rcar_work_mode\x18\x01 \x01(\x0e\x32\x14.adu.hmi.CarWorkMode\"=\n\x0eGlobalWorkMode\x12+\n\rcar_work_mode\x18\x01 \x01(\x0e\x32\x14.adu.hmi.CarWorkMode\"b\n\x11WorkStationResult\x12 \n\x04\x63ode\x18\x01 \x02(\x0e\x32\x12.adu.hmi.ErrorCode\x12+\n\rcar_work_mode\x18\x02 \x01(\x0e\x32\x14.adu.hmi.CarWorkMode\"A\n\x13\x43ollectorStateCheck\x12*\n\x0c\x63heck_result\x18\x01 \x01(\x0e\x32\x14.adu.hmi.CheckResult\"|\n\x14\x43ollectingStateCheck\x12\x33\n\x04\x63ode\x18\x01 \x02(\x0e\x32%.adu.hmi.CollectingStateCheck.ErrCode\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\"!\n\x07\x45rrCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\t\n\x05\x45RROR\x10\x01\"\xcc\x03\n\x17\x46\x65tchCollectDataPackage\x12=\n\x15\x63ollector_state_check\x18\x01 \x01(\x0b\x32\x1c.adu.hmi.CollectorStateCheckH\x00\x12?\n\x16\x63ollecting_state_check\x18\x02 \x01(\x0b\x32\x1d.adu.hmi.CollectingStateCheckH\x00\x12\x36\n\x13work_station_result\x18\x03 \x01(\x0b\x32\x17.adu.hmi.GlobalWorkModeH\x00\x12\x37\n\x12\x62s_connection_info\x18\x04 \x01(\x0b\x32\x19.adu.hmi.BSConnectionInfoH\x00\x12\x37\n\x12\x62s_signal_strength\x18\x05 \x01(\x0b\x32\x19.adu.hmi.BSSignalStrengthH\x00\x12\x32\n\rdisk_info_res\x18\x06 \x01(\x0b\x32\x19.adu.hmi.DiskInfoResponseH\x00\x12\x35\n\x13\x63ollect_device_info\x18\x07 \x01(\x0b\x32\x16.adu.hmi.CollectDeviceH\x00\x42\x1c\n\x1aon_of_collect_data_package\"+\n\x10\x42SSignalStrength\x12\x17\n\x0fsignal_strength\x18\x01 \x01(\x05\"(\n\x10\x42SConnectionInfo\x12\x14\n\x0c\x63onnect_info\x18\x01 \x01(\t\"#\n\x10\x44\x61taCheckRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"\x8f\x01\n\x0f\x44\x61taCheckResult\x12/\n\x06status\x18\x01 \x01(\x0e\x32\x1f.adu.hmi.DataCheckResult.Status\x12\x0f\n\x07\x65rrcode\x18\x02 \x01(\x05\x12\x0f\n\x07message\x18\x03 \x01(\t\")\n\x06Status\x12\x08\n\x04PASS\x10\x00\x12\x0b\n\x07ONGOING\x10\x01\x12\x08\n\x04\x46\x41IL\x10\x02\"B\n\x16\x43ollectingStateRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x17\n\x0f\x63ollecting_mode\x18\x02 \x01(\x08\"M\n\x15\x43ollectingStateResult\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12\x15\n\rerror_message\x18\x03 \x01(\t\"[\n\x13\x46\x65tchCollectDataKey\x12\x33\n\tfetch_key\x18\x01 \x01(\x0e\x32 .adu.hmi.FetchCollectDataKeyType\x12\x0f\n\x07task_id\x18\x02 \x01(\t*^\n\x0b\x43\x61rWorkMode\x12\x10\n\x0cPRODUCT_MODE\x10\x01\x12\x0c\n\x08\x41ID_MODE\x10\x02\x12\r\n\tOPER_MODE\x10\x03\x12\x0f\n\x0b\x43HARGE_MODE\x10\x04\x12\x0f\n\x0bSYSTEM_MODE\x10\x05*7\n\x0b\x43heckResult\x12\x13\n\x0f\x43HECK_RESULT_OK\x10\x01\x12\x13\n\x0f\x43HECK_RESULT_NG\x10\x02*\x92\x02\n\x17\x46\x65tchCollectDataKeyType\x12\x17\n\x13\x43OLLECT_TASK_STATUS\x10\x01\x12\x1f\n\x1b\x43OLLECTOR_STATE_CHECK_SATIC\x10\x02\x12!\n\x1d\x43OLLECTOR_STATE_CHECK_DYNAMIC\x10\x03\x12%\n!COLLECTOR_STATE_CHECK_CONVERGENCE\x10\x04\x12\x16\n\x12\x42S_SIGNAL_STRENGTH\x10\x05\x12\x16\n\x12\x42S_CONNECTION_INFO\x10\x06\x12\x15\n\x11WORK_STATE_RESULT\x10\x07\x12\x13\n\x0f\x44ISK_MOUNT_INFO\x10\x08\x12\x17\n\x13\x43OLLECT_DEVICE_INFO\x10\tB\x02P\x01')
  ,
  dependencies=[hmi__error__code__pb2.DESCRIPTOR,hmi__collect__disk__info__pb2.DESCRIPTOR,hmi__collect__car__device__pb2.DESCRIPTOR,])

_CARWORKMODE = _descriptor.EnumDescriptor(
  name='CarWorkMode',
  full_name='adu.hmi.CarWorkMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PRODUCT_MODE', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AID_MODE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPER_MODE', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHARGE_MODE', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYSTEM_MODE', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1512,
  serialized_end=1606,
)
_sym_db.RegisterEnumDescriptor(_CARWORKMODE)

CarWorkMode = enum_type_wrapper.EnumTypeWrapper(_CARWORKMODE)
_CHECKRESULT = _descriptor.EnumDescriptor(
  name='CheckResult',
  full_name='adu.hmi.CheckResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CHECK_RESULT_OK', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHECK_RESULT_NG', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1608,
  serialized_end=1663,
)
_sym_db.RegisterEnumDescriptor(_CHECKRESULT)

CheckResult = enum_type_wrapper.EnumTypeWrapper(_CHECKRESULT)
_FETCHCOLLECTDATAKEYTYPE = _descriptor.EnumDescriptor(
  name='FetchCollectDataKeyType',
  full_name='adu.hmi.FetchCollectDataKeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COLLECT_TASK_STATUS', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECTOR_STATE_CHECK_SATIC', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECTOR_STATE_CHECK_DYNAMIC', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECTOR_STATE_CHECK_CONVERGENCE', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BS_SIGNAL_STRENGTH', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BS_CONNECTION_INFO', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WORK_STATE_RESULT', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISK_MOUNT_INFO', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECT_DEVICE_INFO', index=8, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1666,
  serialized_end=1940,
)
_sym_db.RegisterEnumDescriptor(_FETCHCOLLECTDATAKEYTYPE)

FetchCollectDataKeyType = enum_type_wrapper.EnumTypeWrapper(_FETCHCOLLECTDATAKEYTYPE)
PRODUCT_MODE = 1
AID_MODE = 2
OPER_MODE = 3
CHARGE_MODE = 4
SYSTEM_MODE = 5
CHECK_RESULT_OK = 1
CHECK_RESULT_NG = 2
COLLECT_TASK_STATUS = 1
COLLECTOR_STATE_CHECK_SATIC = 2
COLLECTOR_STATE_CHECK_DYNAMIC = 3
COLLECTOR_STATE_CHECK_CONVERGENCE = 4
BS_SIGNAL_STRENGTH = 5
BS_CONNECTION_INFO = 6
WORK_STATE_RESULT = 7
DISK_MOUNT_INFO = 8
COLLECT_DEVICE_INFO = 9


_COLLECTINGSTATECHECK_ERRCODE = _descriptor.EnumDescriptor(
  name='ErrCode',
  full_name='adu.hmi.CollectingStateCheck.ErrCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=504,
  serialized_end=537,
)
_sym_db.RegisterEnumDescriptor(_COLLECTINGSTATECHECK_ERRCODE)

_DATACHECKRESULT_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='adu.hmi.DataCheckResult.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PASS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ONGOING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1229,
  serialized_end=1270,
)
_sym_db.RegisterEnumDescriptor(_DATACHECKRESULT_STATUS)


_WORKSTATIONREQUEST = _descriptor.Descriptor(
  name='WorkStationRequest',
  full_name='adu.hmi.WorkStationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='car_work_mode', full_name='adu.hmi.WorkStationRequest.car_work_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=181,
)


_GLOBALWORKMODE = _descriptor.Descriptor(
  name='GlobalWorkMode',
  full_name='adu.hmi.GlobalWorkMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='car_work_mode', full_name='adu.hmi.GlobalWorkMode.car_work_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=244,
)


_WORKSTATIONRESULT = _descriptor.Descriptor(
  name='WorkStationResult',
  full_name='adu.hmi.WorkStationResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='adu.hmi.WorkStationResult.code', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='car_work_mode', full_name='adu.hmi.WorkStationResult.car_work_mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=246,
  serialized_end=344,
)


_COLLECTORSTATECHECK = _descriptor.Descriptor(
  name='CollectorStateCheck',
  full_name='adu.hmi.CollectorStateCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='check_result', full_name='adu.hmi.CollectorStateCheck.check_result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=411,
)


_COLLECTINGSTATECHECK = _descriptor.Descriptor(
  name='CollectingStateCheck',
  full_name='adu.hmi.CollectingStateCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='adu.hmi.CollectingStateCheck.code', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='adu.hmi.CollectingStateCheck.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COLLECTINGSTATECHECK_ERRCODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=537,
)


_FETCHCOLLECTDATAPACKAGE = _descriptor.Descriptor(
  name='FetchCollectDataPackage',
  full_name='adu.hmi.FetchCollectDataPackage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collector_state_check', full_name='adu.hmi.FetchCollectDataPackage.collector_state_check', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collecting_state_check', full_name='adu.hmi.FetchCollectDataPackage.collecting_state_check', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='work_station_result', full_name='adu.hmi.FetchCollectDataPackage.work_station_result', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bs_connection_info', full_name='adu.hmi.FetchCollectDataPackage.bs_connection_info', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bs_signal_strength', full_name='adu.hmi.FetchCollectDataPackage.bs_signal_strength', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk_info_res', full_name='adu.hmi.FetchCollectDataPackage.disk_info_res', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collect_device_info', full_name='adu.hmi.FetchCollectDataPackage.collect_device_info', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_of_collect_data_package', full_name='adu.hmi.FetchCollectDataPackage.on_of_collect_data_package',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=540,
  serialized_end=1000,
)


_BSSIGNALSTRENGTH = _descriptor.Descriptor(
  name='BSSignalStrength',
  full_name='adu.hmi.BSSignalStrength',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signal_strength', full_name='adu.hmi.BSSignalStrength.signal_strength', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1002,
  serialized_end=1045,
)


_BSCONNECTIONINFO = _descriptor.Descriptor(
  name='BSConnectionInfo',
  full_name='adu.hmi.BSConnectionInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connect_info', full_name='adu.hmi.BSConnectionInfo.connect_info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1047,
  serialized_end=1087,
)


_DATACHECKREQUEST = _descriptor.Descriptor(
  name='DataCheckRequest',
  full_name='adu.hmi.DataCheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='adu.hmi.DataCheckRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1089,
  serialized_end=1124,
)


_DATACHECKRESULT = _descriptor.Descriptor(
  name='DataCheckResult',
  full_name='adu.hmi.DataCheckResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='adu.hmi.DataCheckResult.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errcode', full_name='adu.hmi.DataCheckResult.errcode', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='adu.hmi.DataCheckResult.message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DATACHECKRESULT_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1127,
  serialized_end=1270,
)


_COLLECTINGSTATEREQUEST = _descriptor.Descriptor(
  name='CollectingStateRequest',
  full_name='adu.hmi.CollectingStateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='adu.hmi.CollectingStateRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collecting_mode', full_name='adu.hmi.CollectingStateRequest.collecting_mode', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1272,
  serialized_end=1338,
)


_COLLECTINGSTATERESULT = _descriptor.Descriptor(
  name='CollectingStateResult',
  full_name='adu.hmi.CollectingStateResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='adu.hmi.CollectingStateResult.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='adu.hmi.CollectingStateResult.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_message', full_name='adu.hmi.CollectingStateResult.error_message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1340,
  serialized_end=1417,
)


_FETCHCOLLECTDATAKEY = _descriptor.Descriptor(
  name='FetchCollectDataKey',
  full_name='adu.hmi.FetchCollectDataKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fetch_key', full_name='adu.hmi.FetchCollectDataKey.fetch_key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_id', full_name='adu.hmi.FetchCollectDataKey.task_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1419,
  serialized_end=1510,
)

_WORKSTATIONREQUEST.fields_by_name['car_work_mode'].enum_type = _CARWORKMODE
_GLOBALWORKMODE.fields_by_name['car_work_mode'].enum_type = _CARWORKMODE
_WORKSTATIONRESULT.fields_by_name['code'].enum_type = hmi__error__code__pb2._ERRORCODE
_WORKSTATIONRESULT.fields_by_name['car_work_mode'].enum_type = _CARWORKMODE
_COLLECTORSTATECHECK.fields_by_name['check_result'].enum_type = _CHECKRESULT
_COLLECTINGSTATECHECK.fields_by_name['code'].enum_type = _COLLECTINGSTATECHECK_ERRCODE
_COLLECTINGSTATECHECK_ERRCODE.containing_type = _COLLECTINGSTATECHECK
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collector_state_check'].message_type = _COLLECTORSTATECHECK
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collecting_state_check'].message_type = _COLLECTINGSTATECHECK
_FETCHCOLLECTDATAPACKAGE.fields_by_name['work_station_result'].message_type = _GLOBALWORKMODE
_FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_connection_info'].message_type = _BSCONNECTIONINFO
_FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_signal_strength'].message_type = _BSSIGNALSTRENGTH
_FETCHCOLLECTDATAPACKAGE.fields_by_name['disk_info_res'].message_type = hmi__collect__disk__info__pb2._DISKINFORESPONSE
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collect_device_info'].message_type = hmi__collect__car__device__pb2._COLLECTDEVICE
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['collector_state_check'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collector_state_check'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['collecting_state_check'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collecting_state_check'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['work_station_result'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['work_station_result'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_connection_info'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_connection_info'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_signal_strength'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['bs_signal_strength'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['disk_info_res'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['disk_info_res'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package'].fields.append(
  _FETCHCOLLECTDATAPACKAGE.fields_by_name['collect_device_info'])
_FETCHCOLLECTDATAPACKAGE.fields_by_name['collect_device_info'].containing_oneof = _FETCHCOLLECTDATAPACKAGE.oneofs_by_name['on_of_collect_data_package']
_DATACHECKRESULT.fields_by_name['status'].enum_type = _DATACHECKRESULT_STATUS
_DATACHECKRESULT_STATUS.containing_type = _DATACHECKRESULT
_FETCHCOLLECTDATAKEY.fields_by_name['fetch_key'].enum_type = _FETCHCOLLECTDATAKEYTYPE
DESCRIPTOR.message_types_by_name['WorkStationRequest'] = _WORKSTATIONREQUEST
DESCRIPTOR.message_types_by_name['GlobalWorkMode'] = _GLOBALWORKMODE
DESCRIPTOR.message_types_by_name['WorkStationResult'] = _WORKSTATIONRESULT
DESCRIPTOR.message_types_by_name['CollectorStateCheck'] = _COLLECTORSTATECHECK
DESCRIPTOR.message_types_by_name['CollectingStateCheck'] = _COLLECTINGSTATECHECK
DESCRIPTOR.message_types_by_name['FetchCollectDataPackage'] = _FETCHCOLLECTDATAPACKAGE
DESCRIPTOR.message_types_by_name['BSSignalStrength'] = _BSSIGNALSTRENGTH
DESCRIPTOR.message_types_by_name['BSConnectionInfo'] = _BSCONNECTIONINFO
DESCRIPTOR.message_types_by_name['DataCheckRequest'] = _DATACHECKREQUEST
DESCRIPTOR.message_types_by_name['DataCheckResult'] = _DATACHECKRESULT
DESCRIPTOR.message_types_by_name['CollectingStateRequest'] = _COLLECTINGSTATEREQUEST
DESCRIPTOR.message_types_by_name['CollectingStateResult'] = _COLLECTINGSTATERESULT
DESCRIPTOR.message_types_by_name['FetchCollectDataKey'] = _FETCHCOLLECTDATAKEY
DESCRIPTOR.enum_types_by_name['CarWorkMode'] = _CARWORKMODE
DESCRIPTOR.enum_types_by_name['CheckResult'] = _CHECKRESULT
DESCRIPTOR.enum_types_by_name['FetchCollectDataKeyType'] = _FETCHCOLLECTDATAKEYTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

WorkStationRequest = _reflection.GeneratedProtocolMessageType('WorkStationRequest', (_message.Message,), dict(
  DESCRIPTOR = _WORKSTATIONREQUEST,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.WorkStationRequest)
  ))
_sym_db.RegisterMessage(WorkStationRequest)

GlobalWorkMode = _reflection.GeneratedProtocolMessageType('GlobalWorkMode', (_message.Message,), dict(
  DESCRIPTOR = _GLOBALWORKMODE,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.GlobalWorkMode)
  ))
_sym_db.RegisterMessage(GlobalWorkMode)

WorkStationResult = _reflection.GeneratedProtocolMessageType('WorkStationResult', (_message.Message,), dict(
  DESCRIPTOR = _WORKSTATIONRESULT,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.WorkStationResult)
  ))
_sym_db.RegisterMessage(WorkStationResult)

CollectorStateCheck = _reflection.GeneratedProtocolMessageType('CollectorStateCheck', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTORSTATECHECK,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.CollectorStateCheck)
  ))
_sym_db.RegisterMessage(CollectorStateCheck)

CollectingStateCheck = _reflection.GeneratedProtocolMessageType('CollectingStateCheck', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTINGSTATECHECK,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.CollectingStateCheck)
  ))
_sym_db.RegisterMessage(CollectingStateCheck)

FetchCollectDataPackage = _reflection.GeneratedProtocolMessageType('FetchCollectDataPackage', (_message.Message,), dict(
  DESCRIPTOR = _FETCHCOLLECTDATAPACKAGE,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.FetchCollectDataPackage)
  ))
_sym_db.RegisterMessage(FetchCollectDataPackage)

BSSignalStrength = _reflection.GeneratedProtocolMessageType('BSSignalStrength', (_message.Message,), dict(
  DESCRIPTOR = _BSSIGNALSTRENGTH,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.BSSignalStrength)
  ))
_sym_db.RegisterMessage(BSSignalStrength)

BSConnectionInfo = _reflection.GeneratedProtocolMessageType('BSConnectionInfo', (_message.Message,), dict(
  DESCRIPTOR = _BSCONNECTIONINFO,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.BSConnectionInfo)
  ))
_sym_db.RegisterMessage(BSConnectionInfo)

DataCheckRequest = _reflection.GeneratedProtocolMessageType('DataCheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _DATACHECKREQUEST,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.DataCheckRequest)
  ))
_sym_db.RegisterMessage(DataCheckRequest)

DataCheckResult = _reflection.GeneratedProtocolMessageType('DataCheckResult', (_message.Message,), dict(
  DESCRIPTOR = _DATACHECKRESULT,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.DataCheckResult)
  ))
_sym_db.RegisterMessage(DataCheckResult)

CollectingStateRequest = _reflection.GeneratedProtocolMessageType('CollectingStateRequest', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTINGSTATEREQUEST,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.CollectingStateRequest)
  ))
_sym_db.RegisterMessage(CollectingStateRequest)

CollectingStateResult = _reflection.GeneratedProtocolMessageType('CollectingStateResult', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTINGSTATERESULT,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.CollectingStateResult)
  ))
_sym_db.RegisterMessage(CollectingStateResult)

FetchCollectDataKey = _reflection.GeneratedProtocolMessageType('FetchCollectDataKey', (_message.Message,), dict(
  DESCRIPTOR = _FETCHCOLLECTDATAKEY,
  __module__ = 'hmi_collect_data_pb2'
  # @@protoc_insertion_point(class_scope:adu.hmi.FetchCollectDataKey)
  ))
_sym_db.RegisterMessage(FetchCollectDataKey)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('P\001'))
# @@protoc_insertion_point(module_scope)
