# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import launcher_pb2 as launcher__pb2


class LauncherServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetWorkers = channel.unary_unary(
        '/adu.hmi.LauncherService/GetWorkers',
        request_serializer=launcher__pb2.GetWorkersRequest.SerializeToString,
        response_deserializer=launcher__pb2.GetWorkersResponse.FromString,
        )
    self.ControlWorkers = channel.unary_unary(
        '/adu.hmi.LauncherService/ControlWorkers',
        request_serializer=launcher__pb2.ControlWorkersRequest.SerializeToString,
        response_deserializer=launcher__pb2.ControlWorkersResponse.FromString,
        )


class LauncherServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetWorkers(self, request, context):
    """for app get workers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ControlWorkers(self, request, context):
    """for app control workers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LauncherServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetWorkers': grpc.unary_unary_rpc_method_handler(
          servicer.GetWorkers,
          request_deserializer=launcher__pb2.GetWorkersRequest.FromString,
          response_serializer=launcher__pb2.GetWorkersResponse.SerializeToString,
      ),
      'ControlWorkers': grpc.unary_unary_rpc_method_handler(
          servicer.ControlWorkers,
          request_deserializer=launcher__pb2.ControlWorkersRequest.FromString,
          response_serializer=launcher__pb2.ControlWorkersResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.hmi.LauncherService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MonitorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Report = channel.unary_unary(
        '/adu.hmi.MonitorService/Report',
        request_serializer=launcher__pb2.ReportRequest.SerializeToString,
        response_deserializer=launcher__pb2.ReportResponse.FromString,
        )


class MonitorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Report(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MonitorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Report': grpc.unary_unary_rpc_method_handler(
          servicer.Report,
          request_deserializer=launcher__pb2.ReportRequest.FromString,
          response_serializer=launcher__pb2.ReportResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.hmi.MonitorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class WorkerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Control = channel.unary_unary(
        '/adu.hmi.WorkerService/Control',
        request_serializer=launcher__pb2.ControlRequest.SerializeToString,
        response_deserializer=launcher__pb2.ControlResponse.FromString,
        )


class WorkerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Control(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WorkerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Control': grpc.unary_unary_rpc_method_handler(
          servicer.Control,
          request_deserializer=launcher__pb2.ControlRequest.FromString,
          response_serializer=launcher__pb2.ControlResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.hmi.WorkerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
