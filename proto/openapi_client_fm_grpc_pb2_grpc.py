# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import openapi_client_fm_grpc_pb2 as openapi__client__fm__grpc__pb2


class OpenApiServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Controller = channel.stream_stream(
        '/adu.workers.openapi.OpenApiService/Controller',
        request_serializer=openapi__client__fm__grpc__pb2.ControllerRequest.SerializeToString,
        response_deserializer=openapi__client__fm__grpc__pb2.ControllerReply.FromString,
        )


class OpenApiServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Controller(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OpenApiServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Controller': grpc.stream_stream_rpc_method_handler(
          servicer.Controller,
          request_deserializer=openapi__client__fm__grpc__pb2.ControllerRequest.FromString,
          response_serializer=openapi__client__fm__grpc__pb2.ControllerReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.workers.openapi.OpenApiService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
