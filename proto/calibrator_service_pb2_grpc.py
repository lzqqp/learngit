# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import calibrator_message_pb2 as calibrator__message__pb2


class CalibratorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CameraLidarCalibrate = channel.unary_unary(
        '/adu.workers.calibrator.CalibratorService/CameraLidarCalibrate',
        request_serializer=calibrator__message__pb2.CameraLidarCalibrateRequest.SerializeToString,
        response_deserializer=calibrator__message__pb2.CameraLidarCalibrateResponse.FromString,
        )
    self.CameraLidarUploadParams = channel.unary_unary(
        '/adu.workers.calibrator.CalibratorService/CameraLidarUploadParams',
        request_serializer=calibrator__message__pb2.CameraLidarUploadParamsRequest.SerializeToString,
        response_deserializer=calibrator__message__pb2.CameraLidarUploadParamsResponse.FromString,
        )


class CalibratorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CameraLidarCalibrate(self, request, context):
    """camera2lidar params calib.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CameraLidarUploadParams(self, request, context):
    """camera2lidar param update.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalibratorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CameraLidarCalibrate': grpc.unary_unary_rpc_method_handler(
          servicer.CameraLidarCalibrate,
          request_deserializer=calibrator__message__pb2.CameraLidarCalibrateRequest.FromString,
          response_serializer=calibrator__message__pb2.CameraLidarCalibrateResponse.SerializeToString,
      ),
      'CameraLidarUploadParams': grpc.unary_unary_rpc_method_handler(
          servicer.CameraLidarUploadParams,
          request_deserializer=calibrator__message__pb2.CameraLidarUploadParamsRequest.FromString,
          response_serializer=calibrator__message__pb2.CameraLidarUploadParamsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'adu.workers.calibrator.CalibratorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
